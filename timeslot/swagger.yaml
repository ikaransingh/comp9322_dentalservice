swagger: "2.0"
info:
  version: 1.0.0
  description: "This is a timeslot service API"
  title: "ML timeslot service API "
  contact:
    email: "k.singh.1@student.unsw.edu.au"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "timeslot.swagger.io"
basePath: "/v1"
tags:
- name: "default"
  description: "Everything about timeslot service"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"


schemes:
- "http"
paths:
  /timeslots:
    get:
      tags:
      - "default"
      summary: "return all available timeslots"
      produces:
      - "application/json"
      
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              timeslot:
                type: "string"
                example: ["9","10","11","12"]
              
        "500":
          description: "Internal server error"
          
  /booking:
    get:
      tags:
      - "default"
      summary: "return all bookings"
      
      
      
      produces:
      - "application/json"
      
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: [{b_id: "1000", patientName: "Krishna", dentistName: "Dr. Manish", timeslot: "10"},{b_id: "1001", patientName: "Mohit", dentistName: "Dr. Virdi", timeslot: "11"},{b_id: "1002", patientName: "Rahul", dentistName: "Dr. Oliver", timeslot: "12"}]
              
        500:
          description: "Internal server error"
        
        404:
          description: "Not Found"
          
  
    post:
      tags:
      - "default"
      summary: "add new booking information"
      parameters:
        - in: body
          name: booking
          schema:
            $ref: '#/definitions/booking'
            
      responses:
        201:
          description: "created"
          schema:
            type: "object"
            properties:
              result:
                type: "string"
                example: [{b_id: '1003', dentistName: 'Dr. Virdi', patientName: 'Krishna', timeslot: '10'}]
          
              
        500:
          description: "Internal server error"
        
        400:
          description: "Invalid"
  
  /booking/{b_id}:
    delete:
      tags:
      - "default"
      summary: "Cancel appointment by booking id"
      description: "For valid response try integer IDs. Negative or non-integer values will generate API errors"
      produces:
      - "application/json"
      parameters:
      - name: "b_id"
        in: "path"
        description: "ID of the appointment that needs to be deleted"
        required: true
        type: "integer"
      responses:
        204:
          description: "delete successful operation"
          schema:
            type: "object"
            properties:
              b_id:
                type: "string"
                example: "1003"
        400:
          description: "Invalid ID supplied"
  
  
    
definitions:
  booking:
    type: object
    properties:
        patientName:
          type: string
          example: "Krishna"
        dentistName:
          type: string
          example: "Dr. Virdi"
        timeslot:
          type: string
          example: "10"
          
             
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"